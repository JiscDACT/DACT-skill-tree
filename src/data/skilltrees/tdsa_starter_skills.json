{
  "tree": {
    "name": "TDSA Starter",
    "tree": [
      {
        "id": "tdsa-s-1",
        "title": "App use",
        "icon": "icons/app.png",
        "tooltip": {
          "content": "Use the development version of the app to produce an order"
        },
        "links": [
          {
            "url": "https://dev.d10hutskiporm4.amplifyapp.com/",
            "text": "This link takes you to a development version of the app where you can play around freely with putting an order through as it is based on fake data"
          }
        ],
        "children": [
          {
            "id": "tdsa-s-2",
            "title": "TDSA Documentation",
            "icon": "icons/blueprint.svg",
            "tooltip": {
              "content": "Read through the Confluence pages 1.0 TDSA Planning and 2.0 TDSA Data to gain a better understanding of the TDSA Architecture"
            },
            "links": [
              {
                "url": "https://jiscdev.atlassian.net/wiki/spaces/DD/pages/4497014785/1.0+TDSA+Planning",
                "text": "The TDSA planning documentation gives an overall architecture of the web app which uses AWS"
              },
              {
                "url": "https://jiscdev.atlassian.net/wiki/spaces/DD/pages/4616388609/2.0+TDSA+Data",
                "text": "The TDSA web app uses the exploitation layer interpretation of the HESA data. You can read in detail how this is setup at the following link."
              }
            ],
            "children": [
              {
                "id": "tdsa-s-3",
                "title": "Setup Metadata Repo",
                "icon": "icons/pycharm.svg",
                "tooltip": {
                  "content": "Setup local version of the Metadata GitHub Repository"
                },
                "links": [
                  {
                    "url":"https://github.com/JiscDACT/idd_metadata" ,
                    "text": "The metadata repo is on GitHub. Have a browse through the code base."
                  }
                ],
                "children": [
                  {
                    "id": "tdsa-s-4",
                    "title": "Setup PyCharm",
                    "icon": "icons/pycharm.svg",
                    "tooltip": {
                      "content": "Able to use PyCharm to create venv, checkout a project from version control"
                    },
                    "links": [
                      {
                        "url": "https://jisc365.sharepoint.com/sites/SpecialProjectsTeam/SitePages/Python.aspx",
                        "text": "We use PyCharm as the IDE for this project to keep it consistent amongst the team. It has various integrations which make development and version control more seamless. The metadata repo houses all the code to do with preparing and structuring the data as well as producing reports and uploading data to AWS. Read about PyCharm setup and Virtual Environments at the following link. Note we should be able to download PyCharm from the company portal since these notes where written."
                      },
                      {
                        "url": "https://jiscdev.atlassian.net/wiki/spaces/DD/pages/4667277494/Metadata+Repo+Setup",
                        "text": "Confluence contains documentation on how to setup each repo"
                      }
                    ],
                    "children": []
                  },
                  {
                    "id": "tdsa-s-5",
                    "title": "Run Configurations",
                    "icon": "icons/pycharm.svg",
                    "tooltip": {
                      "content": "Able to setup run configurations in PyCharm"
                    },
                    "links": [
                      {
                        "url": "https://jiscdev.atlassian.net/wiki/spaces/DD/pages/4667277494/Metadata+Repo+Setup",
                        "text": "Run configurations are used to run scripts in PyCharm. There are two main scripts we want to run in this repo: build_sql.py and build_metadata.py. There are screenshots in the attached link on how to set this up"
                      }
                    ],
                    "children": [
                      {
                        "id": "tdsa-s-6",
                        "title": "Run build",
                        "icon": "icons/pycharm.svg",
                        "tooltip": {
                          "content": "Can run build sql"
                        },
                        "links": [
                          {
                            "url": "https://jiscdev.atlassian.net/wiki/spaces/DD/pages/4365975602/Adding+to+or+updating+datasets+for+use+in+the+system",
                            "text": "The build sql script builds the sql code that you would then run in DataWarehouse to save Views of the data used behind the app. There is detail on how to update data which uses this build.sql script."
                          }
                        ],
                        "children": []
                      },
                      {
                        "id": "tdsa-s-7",
                        "title": "Run metadata",
                        "icon": "icons/pycharm.svg",
                        "tooltip": {
                          "content": "Can run build metadata"
                        },
                        "links": [
                          {
                            "url": "https://jiscdev.atlassian.net/wiki/spaces/DD/pages/4365975602/Adding+to+or+updating+datasets+for+use+in+the+system",
                            "text": "The build metadata script creates all the metadata json information behind the data like definitions, scoring, domains etc. You would use run this script whenever you need to update any component of the metadata."
                          }
                        ],
                        "children": []
                      }
                    ]
                  },
                  {
                    "id": "tdsa-s-8",
                    "title": "JSON",
                    "icon": "icons/json.svg",
                    "tooltip": {
                      "content": "Understand how JSON is used to store data"
                    },
                    "links": [
                      {
                        "url": "https://jisc365-my.sharepoint.com/:v:/r/personal/katie_martin_jisc_ac_uk/Documents/Recordings/Json%20coding-20231024_113453-Meeting%20Recording.mp4?csf=1&web=1&nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&e=vbxdCQ",
                        "text": "JSON, which stands for JavaScript Object Notation, is a lightweight data format that's easy to read and write for both humans and computers. It's commonly used to exchange data between a server and a web application, or between different parts of an application. JSON represents data as key-value pairs, and it's a popular alternative to XML due to its simplicity and compactness. Think of it as a way to neatly package information so that software systems can understand and communicate with each other. See this recording on a brief overview of JSON data."
                      }
                    ],
                    "children": [
                      {
                        "id": "tdsa-s-9",
                        "title": "Alter JSON",
                        "icon": "icons/json.svg",
                        "tooltip": {
                          "content": "Can amend existing jsons with new information"
                        },
                        "links": [
                          {
                            "url": "https://jiscdev.atlassian.net/wiki/spaces/DD/pages/4365975602/Adding+to+or+updating+datasets+for+use+in+the+system",
                            "text": "This skill would involve updating the metadata jsons and being able to run through the update process at the following link"
                          }
                        ],
                        "children": []
                      }
                    ]
                  },
                  {
                    "id": "tdsa-s-10",
                    "title": "Pytests",
                    "icon": "icons/pytest.svg",
                    "tooltip": {
                      "content": "Able to run Pytests and understand why we need unit tests in a project"
                    },
                    "links": [
                      {
                        "url": "https://docs.pytest.org/en/7.4.x/",
                        "text": "Pytest is a testing framework for Python that simplifies the process of writing and executing tests. It provides powerful features like fixtures and parameterized testing, allowing developers to write more concise and scalable tests. By using pytest, developers can ensure the reliability and robustness of their codebase. This is a key component for producing production ready code. The link takes you to pytest documentation."
                      }
                    ],
                    "children": [
                      {
                        "id": "tdsa-s-11",
                        "title": "Pytest addition",
                        "icon": "icons/pytest.svg",
                        "tooltip": {
                          "content": "Able to write an additional Pytest using the structure already available"
                        },
                        "links": [
                          {
                            "url": "https://realpython.com/pytest-python-testing/#:~:text=All%20you%20need%20to%20do,will%20test%20it%20for%20you.",
                            "text": "If you need to write additional pytests for more coverage or new functions/processes you can follow the format of existing pytests which are housed in the test folders under metadata_specifications, metadata_utils and metadata_rules."
                          }
                        ],
                        "children": []
                      }
                    ]
                  }
                ]
              },
              {
                "id": "tdsa-s-12",
                "title": "Repo understanding",
                "icon": "icons/thinking_understanding.png",
                "tooltip": {
                  "content": "Understand the purpose of the repository"
                },
                "links": [
                  {
                    "url": "",
                    "text": "Once you have started updating aspects and can run the main scripts you will start to get an idea on the main purpose behind the repository and how it integrates into other components of the webapp"
                  }
                ],
                "children": [
                  {
                    "id": "tdsa-s-13",
                    "title": "Field update",
                    "icon": "icons/process.svg",
                    "tooltip": {
                      "content": "Can update a field in the TDSA data from start to finish"
                    },
                    "links": [
                      {
                        "url": "https://jiscdev.atlassian.net/wiki/spaces/DD/pages/4365975602/Adding+to+or+updating+datasets+for+use+in+the+system",
                        "text": "This skill would involve updating a field (such as changing the name of a field), running the resulting sql in DW, then updating the metadata."
                      }
                    ],
                    "children": []
                  },
                  {
                    "id": "tdsa-s-14",
                    "title": "Field addition",
                    "icon": "icons/process.svg",
                    "tooltip": {
                      "content": "Can add a whole new field to the TDSA data from start to finish"
                    },
                    "links": [
                      {
                        "url": "https://jiscdev.atlassian.net/wiki/spaces/DD/pages/4365975602/Adding+to+or+updating+datasets+for+use+in+the+system",
                        "text": "This skill would involve adding a brand new field to a dataset, running the resulting sql in DW, then adding the metadata."
                      }
                    ],
                    "children": []
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}
