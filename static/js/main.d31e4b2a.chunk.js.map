{"version":3,"sources":["tree.ts","skillProfile.ts","profile.tsx","profileGroup.tsx","treeWrapper.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["statistics","id","title","icon","tooltip","content","children","programming","dataScientist","name","color","description","skills","portrait","completion","dataEngineer","softwareEngineer","devOps","dataViz","updateProfiles","profiles","newProfileList","i","profile","skillsTotal","length","skillsCompleted","skill","node","nodeState","Math","round","push","Profile","props","borderColor","titleColor","data","Portrait","styled","img","opacity","max","Title","h2","className","src","value","text","styles","path","stroke","fill","ProfileGroup","map","key","TreeWrapper","theme","borderRadius","nodeBorderColor","nodeHoverBorder","edgeBorder","skillCount","treeId","tree","collapsible","handleSave","Component","App","useState","localStorage","getItem","JSON","parse","getProfiles","changeProfiles","myHandleSave","storage","setItem","stringify","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d31e4b2a.chunk.js","sourcesContent":["import {SkillType} from \"beautiful-skill-tree\";\n\n\nexport const statistics: SkillType[] = [\n    {\n        id: 'stats-basic',\n        title: 'Statistics basics',\n        icon: 'icons/RoundIcons_FreeSet-35.svg',\n        tooltip: {\n            content:\n                'Understand the basics of statistics.'\n        },\n        children: [\n            {\n                id: 'stats-desc-1',\n                title: 'Centrality and variance',\n                icon: 'icons/RoundIcons_FreeSet-43.svg',\n                tooltip: {content: 'Apply appropriate measures of centrality and variance'},\n                children: [\n                    {\n                        id: 'stats-desc-2',\n                        title: 'Distributions',\n                        icon: 'icons/RoundIcons_FreeSet-43.svg',\n                        tooltip: {content: 'Analyse distribution using histograms, z-scores and quantiles'},\n                        children: [\n                            {\n                                id: 'stats-desc-3',\n                                title: 'Advanced distributions',\n                                icon: 'icons/RoundIcons_FreeSet-43.svg',\n                                tooltip: {content: 'Create distribution metrics e.g.skew, kurtosis, heuristics'},\n                                children: [\n                                ]\n                            },\n                            {\n                                id: 'stats-desc-4',\n                                title: 'Clustering',\n                                icon: 'icons/RoundIcons_FreeSet-43.svg',\n                                tooltip: {content: 'Clustering e.g. K-Means'},\n                                children: [\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        id: 'stats-desc-5',\n                        title: 'Outliers',\n                        icon: 'icons/RoundIcons_FreeSet-43.svg',\n                        tooltip: {content: 'Detect and exclude outliers'},\n                        children: [\n                        ]\n                    }\n                ]\n            },\n            {\n                id: 'stats-metrics',\n                title: 'Deriving metrics',\n                icon: 'icons/RoundIcons_FreeSet-53.svg',\n                tooltip: {content: 'Create derived metrics and indicators'},\n                children: [\n                    {\n                        id: 'stats-scaling',\n                        title: 'Normalisation',\n                        icon: 'icons/RoundIcons_FreeSet-53.svg',\n                        tooltip: {content: 'Use feature scaling and normalisation to enable comparison between measures'},\n                        children: [\n                            {\n                                id: 'stats-pca',\n                                title: 'PCA/MCA',\n                                icon: 'icons/RoundIcons_FreeSet-53.svg',\n                                tooltip: {content: 'Use PCA/MCA to create derived dimensions'},\n                                children: [\n                                ]\n                            },\n                            {\n                                id: 'stats-dimension-reduction',\n                                title: 'Dimension reduction',\n                                icon: 'icons/RoundIcons_FreeSet-53.svg',\n                                tooltip: {content: 'Dimension reduction and generalisation'},\n                                children: [\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                id: 'stats-diagnostic-1',\n                title: 'Diagnostic statistics',\n                icon: 'icons/RoundIcons_FreeSet-30.svg',\n                tooltip: {content: 'Using z-tests, t-tests, x^2, Pearson and other simple tests for significance'},\n                children: [\n                    {\n                        id: 'stats-diagnostic-2',\n                        title: 'Advanced diagnostic statistics',\n                        icon: 'icons/RoundIcons_FreeSet-30.svg',\n                        tooltip: {content: 'Using HLR, HLM, ANOVA and coefficients to identify important factors'},\n                        children: [\n                        ]\n                    }\n                ]\n            },\n            {\n                id: 'stats-predictive-1',\n                title: 'Regression',\n                icon: 'icons/science.svg',\n                tooltip: {content: 'Linear and Logistic Multivariate Regression'},\n                children: [\n                    {\n                        id: 'stats-predictive-2',\n                        title: 'Model evaluation',\n                        icon: 'icons/science.svg',\n                        tooltip: {content: 'Can appropriately test model fit, uses more complex statistical techniques and is not restricted to \"out of the box\" programs and scripts. Interpretation of complex outputs. Manages more complex data interpretation e.g. modelling missing data. '},\n                        children: [\n                        ]\n                    },\n                    {\n                        id: 'stats-predictive-3',\n                        title: 'SVMs and ANNs',\n                        icon: 'icons/science.svg',\n                        tooltip: {content: 'SVMs and ANNs'},\n                        children: [\n                        ]\n                    },\n                    {\n                        id: 'stats-predictive-4',\n                        title: 'ABMs and sims',\n                        icon: 'icons/science.svg',\n                        tooltip: {content: 'Agent-based modelling and simulations'},\n                        children: [\n                        ]\n                    },\n                    {\n                        id: 'stats-optim',\n                        title: 'Optimisation/maximisation',\n                        icon: 'icons/science.svg',\n                        tooltip: {content: 'Calculus for optimisation/maximisation'},\n                        children: [\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n]\n\nexport const programming: SkillType[] = [\n    {\n        id: 'programming-basic',\n        title: 'Programming basics',\n        icon: 'icons/RoundIcons_FreeSet-35.svg',\n        tooltip: {\n            content:\n                'Understand the basics of programming.',\n        },\n        children: [\n            {\n                id: 'programming-open',\n                title: 'Run projects',\n                icon: 'icons/RoundIcons_FreeSet-58.svg',\n                tooltip: {\n                    content:\n                        'Can open and run a notebook/project created by another.',\n                },\n                children: [\n                    {\n                        id: 'programming-create',\n                        title:'Create projects',\n                        icon: 'icons/RoundIcons_FreeSet-07.svg',\n                        tooltip: {content:'Create a new Python or R project and set up dependencies'},\n                        children:[\n                            {\n                                id: 'python-data',\n                                title: 'Python data structures',\n                                icon: 'icons/python.svg',\n                                tooltip: {content: 'Work with lists, dicts and other basic data types'},\n                                children: [\n                                    {\n                                        id: 'python-modules',\n                                        title: 'Python modules',\n                                        icon: 'icons/python.svg',\n                                        tooltip: {content: 'Organise code with modules and imports'},\n                                        children: []\n                                    },\n                                    {\n                                        id: 'python-comp',\n                                        title: 'Python programming',\n                                        icon: 'icons/python.svg',\n                                        tooltip: {content: 'Confidently implement algorithms in Python'},\n                                        children: []\n                                    }\n                                ]\n                            },\n                            {\n                                id: 'programming-import',\n                                title:'Dataframes',\n                                icon: 'icons/RoundIcons_FreeSet-53.svg',\n                                tooltip: {content:'Import data into dataframes in R or Python (e.g. using Pandas) and describe them'},\n                                children:[\n                                    {\n                                        id: 'programming-aggregate',\n                                        title:'Aggregations',\n                                        icon: 'icons/RoundIcons_FreeSet-33.svg',\n                                        tooltip: {content:'Perform aggregate calculations on dataframes in R or Python (e.g. using Pandas)'},\n                                        children:[\n                                        ]\n                                    },\n                                    {\n                                        id: 'programming-reshape',\n                                        title:'Reshape',\n                                        icon: 'icons/RoundIcons_FreeSet-33.svg',\n                                        tooltip: {content:'Reshape dataframes in R or Python (e.g. using Pandas)'},\n                                        children:[\n                                        ]\n                                    },\n                                    {\n                                        id: 'programming-analysis',\n                                        title:'Analyse',\n                                        icon: 'icons/RoundIcons_FreeSet-33.svg',\n                                        tooltip: {content:'Perform statistical analysis steps in R or Python e.g. HLR'},\n                                        children:[\n                                            {\n                                                id: 'programming-model',\n                                                title:'Model',\n                                                icon: 'icons/science.svg',\n                                                tooltip: {content:'Perform machine learning tasks in R or Python (e.g. using SciKit-Learn) such as multivariate linear regression'},\n                                                children:[\n                                                ]\n                                            }\n                                        ]\n                                    }\n                                ]\n                            },\n                            {\n                                id: 'programming-import-csv',\n                                title:'CSV',\n                                icon: 'icons/csv.svg',\n                                tooltip: {content:'Load and work with CSV data'},\n                                children:[\n                                    {\n                                        id: 'programming-clean-csv',\n                                        title:'Cleaning CSVs',\n                                        icon: 'icons/csv.svg',\n                                        tooltip: {content:'Clean up CSV data'},\n                                        children:[\n                                            {\n                                                id: 'programming-csv-end-to-end',\n                                                title:'Create a data app',\n                                                icon: 'icons/csv.svg',\n                                                tooltip: {content:'Create a program to load, clean and export data'},\n                                                children:[\n                                                ]\n                                            },\n                                        ]\n                                    }\n                                ]\n                            },\n                            {\n                                id: 'programming-xml',\n                                title:'XML and text',\n                                icon: 'icons/xml.svg',\n                                tooltip: {content:'Use Python or R to process XML and HTML documents and extract data and text e.g. using LXML'},\n                                children:[\n                                ]\n                            },\n                            {\n                                id: 'programming-version',\n                                title:'Git',\n                                icon: 'icons/RoundIcons_FreeSet-19.svg',\n                                tooltip: {content:'Develop software in collaboration with others using a version control system (e.g. git, github and gitlab)'},\n                                children:[\n                                    {\n                                        id: 'programming-ci',\n                                        title:'CI/CD',\n                                        icon: 'icons/devops.svg',\n                                        tooltip: {content:'Deploy code automatically using CI/CD'},\n                                        children:[\n                                            {\n                                                id: 'programming-mg',\n                                                title:'DevOps',\n                                                icon: 'icons/devops.svg',\n                                                tooltip: {content:'Manage DevOps for projects'},\n                                                children:[\n                                                ]\n                                            }\n                                        ]\n                                    },\n                                    {\n                                        id: 'programming-arch',\n                                        title:'Architecture',\n                                        icon: 'icons/RoundIcons_FreeSet-19.svg',\n                                        tooltip: {content:'Create the architecture for a new solution'},\n                                        children:[\n                                        ]\n                                    },\n                                    {\n                                        id: 'programming-testing',\n                                        title:'Testing',\n                                        icon: 'icons/RoundIcons_FreeSet-19.svg',\n                                        tooltip: {content:'Check code quality using unit tests and integration tests'},\n                                        children:[\n\n                                        ]\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ],\n    },\n];","import {Skill} from \"beautiful-skill-tree/dist/models\";\n\nexport class SkillProfile {\n    name: String = '';\n    description?: String;\n    skills: String[] = [];\n    completion?: Number = 0;\n    portrait?: String;\n    color?: String = 'white'\n}\n\nconst  dataScientist: SkillProfile = {\n    name: 'Data Scientist',\n    color: 'MediumOrchid',\n    description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n    skills: [\n        'programming-analysis',\n        'programming-reshape',\n        'programming-model',\n        'programming-aggregate',\n        'stats-predictive-1',\n        'stats-diagnostic-1',\n        'stats-diagnostic-2',\n        'stats-metrics',\n        'stats-scaling',\n        'stats-desc-1',\n        'stats-desc-2',\n        'stats-desc-3',\n        'stats-desc-4',\n        'stats-desc-5',\n    ]\n    ,portrait: 'portraits/portrait1.png'\n    ,completion: 0\n}\nconst  dataEngineer: SkillProfile = {\n    name: 'Data Engineer',\n    color: 'HotPink',\n    description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n    skills: ['programming-csv-end-to-end', 'programming-xml']\n    ,portrait: 'portraits/portrait2.png'\n    ,completion: 0\n}\nconst  softwareEngineer: SkillProfile = {\n    name: 'Software Engineer',\n    color: 'Turquoise',\n    description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n    skills: [\n        'python-data',\n        'python-comp',\n        'python-modules',\n        'programming-version',\n        'programming-ci',\n        'programming-testing']\n    ,portrait: 'portraits/portrait3.png'\n    ,completion: 0\n}\nconst  devOps: SkillProfile = {\n    name: 'DevOps Engineer',\n    color: 'DeepSkyBlue',\n    description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n    skills: ['programming-version', 'programming-ci', 'programming-testing', 'programming-mg']\n    ,portrait: 'portraits/portrait7.png'\n    ,completion: 0\n}\n\nconst  dataViz: SkillProfile = {\n    name: 'Data Viz Wiz',\n    color: 'DarkOrange',\n    description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n    skills: ['programming-version','dataviz-1','dataviz-2']\n    ,portrait: 'portraits/portrait6.png'\n    ,completion: 0\n}\n\nexport function getEmptyProfiles() {\n    return [dataScientist, softwareEngineer, devOps, dataEngineer, dataViz]\n}\n\nexport function getProfiles(): SkillProfile[] {\n    let profiles = localStorage.getItem(\"profiles\");\n    if (profiles && profiles !== \"null\") {\n        return JSON.parse(profiles);\n    }\n    return [dataScientist, softwareEngineer, devOps, dataEngineer, dataViz]\n}\n\nexport function updateProfiles(profiles: any, skills:any){\n    let newProfileList = []\n    for (let i in profiles) {\n        let profile = profiles[i]\n        let skillsTotal = profile.skills.length\n        let skillsCompleted = 0\n        for (let skill in profile.skills) {\n            let skillName = profile.skills[skill];\n            let node = skills[skillName as keyof Skill];\n            if (node) {\n                if (node.nodeState === 'selected') {\n                    skillsCompleted += 1;\n                }\n            }\n        }\n        let completion = Math.round((skillsCompleted / skillsTotal) * 100);\n        if(!completion){\n            completion = 0;\n        }\n        profile.completion = completion\n        newProfileList.push(profile)\n    }\n    return newProfileList\n}","import React from \"react\";\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport styled from \"styled-components\";\n\nexport function Profile(props:any) {\n\n        let borderColor='gray'\n        let titleColor='white'\n        if(props.data.completion===100){ borderColor=props.data.color; titleColor=props.data.color}\n\n        const Portrait = styled.img ({\n            opacity: Math.max(props.data.completion / 100, 0.1),\n            borderColor: borderColor\n        })\n\n       const Title = styled.h2 ({\n           color: titleColor\n       })\n\n        return (\n            <div className={'profile'}>\n                <Title className={'profile-name'}>{props.data.name}</Title>\n                <Portrait className={'profile-portrait'} src={props.data.portrait}/>\n                <div className={'completion'}>\n                    <CircularProgressbar\n                        value={props.data.completion}\n                        text={`${props.data.completion}%`}\n                        styles={{\n                            // Customize the path, i.e. the \"completed progress\"\n                            path: {\n                                // Path color\n                                stroke: `${props.data.color}`,\n                            },\n                            // Customize the text\n                            text: {\n                                // Text color\n                                fill: `${props.data.color}`,\n                            }\n                        }}\n\n                    />\n                </div>\n                <p>{props.data.description}</p>\n            </div>\n        )\n}","import {Profile} from \"./profile\";\nimport React from \"react\";\nimport {SkillProfile} from \"./skillProfile\";\n\nexport function ProfileGroup(props:any){\n    return (\n        <div>\n            <div className={'profile-group'}>\n            {\n                props.profiles.map(function(profile:SkillProfile, key=profile.name){\n                return <Profile key={key} data={profile}/>;\n                })\n            }\n            </div>\n        </div>\n    )\n}","import React, {Component} from \"react\";\nimport {SkillGroupDataType, SkillProvider, SkillTree, SkillTreeGroup} from \"beautiful-skill-tree\";\n\nexport class TreeWrapper extends Component<any> {\n\n    render(){\n        return (\n            <div>\n            <SkillProvider>\n                <SkillTreeGroup\n                    theme={\n                        {\n                            borderRadius: '32px',\n                            nodeBorderColor: 'grey',\n                            nodeHoverBorder: 'none',\n                            edgeBorder: '1px solid grey'\n                        }\n\n                    }>\n                    {(\n                        {skillCount}: SkillGroupDataType) => (\n                        <SkillTree\n                            treeId={this.props.treeId}\n                            title={this.props.title}\n                            data={this.props.tree}\n                            collapsible\n                            description={this.props.description}\n                            handleSave={this.props.handleSave}\n                        />\n                    )}\n                </SkillTreeGroup>\n            </SkillProvider>\n            </div>\n        )\n    }\n}","import React, {useState} from 'react';\nimport './App.css';\nimport {statistics, programming} from './tree'\nimport {getEmptyProfiles, getProfiles} from './skillProfile'\nimport {updateProfiles} from \"./skillProfile\";\nimport {ProfileGroup} from \"./profileGroup\";\n\nimport {Tab, Tabs, TabList, TabPanel} from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport {TreeWrapper} from \"./treeWrapper\";\n\nfunction App() {\n    const [profiles, changeProfiles] = useState(getProfiles());\n\n    // TODO handle loading event as well\n    function myHandleSave(storage: any, treeId: any, skills: any) {\n        changeProfiles(updateProfiles(profiles, skills))\n        storage.setItem(\"profiles\", JSON.stringify(profiles))\n        return storage.setItem(\"skills-\" + treeId, JSON.stringify(skills));\n    }\n\n    function resetProfiles(){\n        changeProfiles(updateProfiles(getEmptyProfiles(), []))\n    }\n\n    return (\n        <article>\n            <div className={'App-header'}>\n                <h3>DACT Skill Tree</h3>\n            </div>\n            <section>\n                <Tabs>\n                    <TabList>\n                        <Tab>Introduction</Tab>\n                        <Tab>Profiles</Tab>\n                        <Tab>Programming</Tab>\n                        <Tab>Statistics</Tab>\n\n                        <Tab>Data Management</Tab>\n                        <Tab>Data Visualisation</Tab>\n                        <Tab>Databases and SQL</Tab>\n                        <Tab>Web development</Tab>\n\n                        <Tab>Admin/Dev use</Tab>\n                    </TabList>\n                    <TabPanel>\n                        <div>\n                            <h1>DACT Skill Tree</h1>\n                            <p>Interactive skill tree and job profiler!</p>\n                            <p>This is a demo only! The images it uses are all development placeholders and\n                            are not owned or licensed for use.\n                                If you own an image and want it removed,\n                            just let me know and I'll remove it. </p>\n                        </div>\n                    </TabPanel>\n                    <TabPanel>\n                        <ProfileGroup profiles={profiles}/>\n                    </TabPanel>\n                    <TabPanel>\n                        <TreeWrapper\n                            treeId=\"programming\"\n                            title=\"Programming for data analytics\"\n                            tree={programming}\n                            collapsible\n                            description=\"Developing data analytics solutions with Python and R\"\n                            handleSave={myHandleSave}\n                        />\n                    </TabPanel>\n                    <TabPanel>\n                        <TreeWrapper\n\n                            treeId=\"programming\"\n                            title=\"Using statistics\"\n                            tree={statistics}\n                            collapsible\n                            description=\"Developing data analytics solutions with Python and R\"\n                            handleSave={myHandleSave}\n                        />\n                    </TabPanel>\n                    <TabPanel/>\n                    <TabPanel/>\n                    <TabPanel/>\n                    <TabPanel/>\n                    <TabPanel>\n                        <button onClick={resetProfiles}>Reset profiles</button>\n                    </TabPanel>\n                </Tabs>\n            </section>\n        </article>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}